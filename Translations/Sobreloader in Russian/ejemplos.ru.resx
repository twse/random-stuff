<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label1.Text" xml:space="preserve">
    <value>Некоторые имена для запуска программ.
(кликните на элемент, чтобы увидеть больше информации)</value>
  </data>
  <data name="button1.Text" xml:space="preserve">
    <value>&amp;Скопируйте</value>
  </data>
  <data name="button2.Text" xml:space="preserve">
    <value>&amp;Попробуйте</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="labelw.Size" type="System.Drawing.Size, System.Drawing">
    <value>60, 13</value>
  </data>
  <data name="labelw.Text" xml:space="preserve">
    <value>Работает в:</value>
  </data>
  <data name="labelWW.Text" xml:space="preserve">
    <value>разных системах</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Примерах</value>
  </data>
  <data name="1D" xml:space="preserve">
    <value>Классический редактор изображений, установленный по умолчанию в Windows.</value>
  </data>
  <data name="1T" xml:space="preserve">
    <value>Paint</value>
  </data>
  <data name="1W" xml:space="preserve">
    <value>Все</value>
  </data>
  <data name="2D" xml:space="preserve">
    <value>Простой и удобный текстовый редактор без форматирования.</value>
  </data>
  <data name="2T" xml:space="preserve">
    <value>Блокнот</value>
  </data>
  <data name="2W" xml:space="preserve">
    <value>Все</value>
  </data>
  <data name="3D" xml:space="preserve">
    <value>Редактор текста с обогащенным форматом, очень базовый по сравнению с Word, но более полный, чем Блокнот. Что еще можно пожелать?</value>
  </data>
  <data name="3T" xml:space="preserve">
    <value>WordPad</value>
  </data>
  <data name="3W" xml:space="preserve">
    <value>Все</value>
  </data>
  <data name="4D" xml:space="preserve">
    <value>Из браузеров Интернет, вошедших в историю. В свое время он стал самым популярным, превосходя Netscape. Сегодня он позволяет вам скачивать другие, такие как этот.</value>
  </data>
  <data name="4T" xml:space="preserve">
    <value>Internet Explorer</value>
  </data>
  <data name="4W" xml:space="preserve">
    <value>Даже Windows 10</value>
  </data>
  <data name="5D" xml:space="preserve">
    <value>Самый используемый инструмент Microsoft Windows.</value>
  </data>
  <data name="5T" xml:space="preserve">
    <value>Проводник файлов</value>
  </data>
  <data name="5W" xml:space="preserve">
    <value>Все</value>
  </data>
  <data name="6D" xml:space="preserve">
    <value>Если вам нужно искать и вставлять странные символы или если вы собираетесь отправить электронное письмо, а ваша грёбаная клавиатура не позволяет вставить @, этот предустановленный утилита великолепно вам поможет.</value>
  </data>
  <data name="6T" xml:space="preserve">
    <value>Таблица символов</value>
  </data>
  <data name="6W" xml:space="preserve">
    <value>Все</value>
  </data>
  <data name="7D" xml:space="preserve">
    <value>Центр основных настроек операционной системы Microsoft. Присутствует с самого начала.</value>
  </data>
  <data name="7T" xml:space="preserve">
    <value>Панель управления</value>
  </data>
  <data name="7W" xml:space="preserve">
    <value>Все</value>
  </data>
  <data name="8D" xml:space="preserve">
    <value />
  </data>
  <data name="8T" xml:space="preserve">
    <value>Неизвестная программа</value>
  </data>
  <data name="8W" xml:space="preserve">
    <value>??</value>
  </data>
  <data name="msgErrorOF" xml:space="preserve">
    <value>Произошла ошибка. Проверьте, совместима ли программа с вашей версией Windows.</value>
  </data>
</root>
